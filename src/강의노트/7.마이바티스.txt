[ DAO : JDBC ]
    1. 정의 : 자바에서 DB와 직접연결하고 SQL 실행을 담당
    2. 주요 인터페이스 : Connection , PreparedStatement , ResultSet

[ MyBatis : 마이바티스 ]
    1. 정의 : JDBC보다 편리한 기능 제공, 객체 자동 매핑(연결)
    2. 특징
        1. SQL 매핑
        2. 결과 매핑
        3. 유연성
        4. 스프링에서 공식 지원
    3. 설치
        1. 'build.gradle' 의존성 추가, 단] DBMS 라이브러리 같이 존재해야 한다. mysql/oracle 등등
         implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.5'
    4. 자바와 DB연동 설정, application.properties 파일 이용한 자동으로 DB연동
        문제1) application.properties 파일은 src->main-> resources 폴더내 위치하낟.
        문제2) 한글이 깨지는 경우 : 인텔리제이 -> 설정 -> '파일 인코딩' 검색후 -> '프로퍼티에 대한 디폴트 인코딩' : uft-8
        JDBC 연동)
        spring.datasource.url=jdbc:mysql://localhost:3306/DB명
        spring.datasource.username=계정명
        spring.datasource.password=비밀번호

[ MyBatis 사용법 ]
    1. 인터페이스 생성한다.
    2. 인터페이스 위에 @Mapper 주입한다.
    3. SQL DML 어노테이션 사용한다.
        INSERT : @Insert("sql작성")
        SELECT : @Select("sql작성")
        DELETE : @Delete("sql작성")
        UPDATE : @Update("sql작성")
    4. SQL 내 ? 대신 매개변수 #{ 매개변수 } 표현
    5. 추상메소드 선언 -- { } 중괄호 없는
        매개변수 : SQL 문법내 매개변수 #{  }
        반환타입 : SQL 결과 매핑
            int : insert/update/delete 처리된 레코드 수 반환
            Map/Dto/List : select 조회결과 레코드 자료들을 반환
        * 주의할점 : 매핑할 레코드의 컬럼명과 자바의 속성명은 일치해야 한다.

[ 스프링 SQL 자동 실행 파일 ]
    1. resource 폴더 아래 2개 SQL 파일 작성
        1) sechma.sql : DDL SQL , 주로 drop/create
            - 테이블생성/삭제 코드 작성
            - 데이터베이스 생성/삭제 안된다.
            - 서버 실해이 자동 실행되므로 DROP TABLE 먼저 작성한다.
            - *관계참고*일때는 FK 테이블 먼저 DROP 한다.
        2) data.sql : DML SQL , 주로  insert
            - 샘플 데이터 코드 작성
    2. application.properties 설정
        1) spring.sql.init.mode = always(항상실행:개발단계) / never(실행안함:운영단계)
        2) spring.sql.init.schema-locations=classpath:/폴더명/schema.sql
        3) spring.sql.init.data-locations=classpath:/폴더명/data.sql
        * classpath : [resource]폴더 이하경로






